
        [TestMethod]
        public void Template_Get_Address_Address1_EqualsAssignedValue()
        {
            var foo = new MasonApps.HRManager.models.address.Address();

            foo.Address1 = "foo";
            Assert.AreEqual("foo", foo.Address1);

            foo.Address1 = "foo2";
            Assert.AreEqual("foo2", foo.Address1);
        }




<#
   var tups =  new List<Tuple<string, string, string>>();

            // TODO: REMOVE ADDRESS CLASS AND MAKE DYNAMIC
            var a = typeof(Address).Assembly;

            var types = a.GetTypes();
            Array.Sort(types,
                delegate (Type type1, Type type2)
                {
                    return string.Compare(type1.FullName, type2.FullName, StringComparison.Ordinal);
                });

            foreach (var type in types)
            {
                // get all public static properties of MyClass type
                var propertyInfos = type.GetProperties();

                // sort properties by name
                Array.Sort(propertyInfos,
                            delegate (PropertyInfo propertyInfo1, PropertyInfo propertyInfo2)
                            {
                                return string.Compare(propertyInfo1.Name, propertyInfo2.Name, StringComparison.Ordinal);
                            });

                // write property names
                foreach (var propertyInfo in propertyInfos)
                {
                    if (propertyInfo.PropertyType == typeof(string))
                    {                   
                        tups.Add(Tuple.Create(type.FullName,type.Name,propertyInfo.Name));
                    }
                }
            }
     
foreach(var prop in tups) {
#>

    [TestMethod]
    public void TemplateGet<#=  prop.Item2 #>_<#= prop.Item3 #>_EqualsAssignedValue()
    {
            var foo = new <#=  prop.Item1 #>();

            foo.<#=  prop.Item3 #> = "foo";
            Assert.AreEqual("foo",foo.<#=  prop.Item3 #>);

            foo.<#=  prop.Item3 #> = "foo2";
            Assert.AreEqual("foo2",foo.<#=  prop.Item3 #>);
    }

<#
} 
#>